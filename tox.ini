[tox]
envlist = py{39, 310, 311, 312}-{lin,mac,win}, lint, format, flake8, type-check, docs, build, install, upload, dbg
skip_missing_interpreters = true
requires =
    tox>=4
    virtualenv>20.2
labels =
     test = py{39, 310, 311, 312}-{lin,mac,win}
     static = lint, format, flake8, type-check, docs

[testenv]
platform =
    lin: linux
    mac: darwin
    win: win32
deps =
    pytest
    pytest-xdist
    pytest-cov
    # -rrequirements.txt
    py311-mac: ../enable/dist/enable-6.2.0.dev0-cp311-cp311-macosx_10_9_universal2.whl
    py312-mac: ../enable/dist/enable-6.1.0.dev0-cp312-cp312-macosx_12_0_arm64.whl
    py312-mac: ../chaco/dist/chaco-6.0.0-cp312-cp312-macosx_12_0_arm64.whl
package = wheel
wheel_build_env = .pkg
commands =
    pytest --basetemp={envtmpdir} -vv --cov=pybert \
           --cov-report=html --cov-report=term-missing tests
static:  # Not working as expected!
    skip_install = true
allowlist_externals =
    validate-pyproject
conda_deps =
    # numpy==1.23.3  # Version number required! Conda ignores `pyproject.toml`.
    enable
conda_channels =
    dbanas
    conda-forge
    defaults
conda_install_args =
    --force-reinstall
    --override-channels
conda_create_args =
    --override-channels

[testenv:dbg]
description = Temporary environment for debugging my Tox configuration.
deps =
    ../enable/dist/enable-6.2.0.dev0-cp311-cp311-macosx_10_9_universal2.whl
commands =
    mac: echo "I'm running on MacOS."
    echo "All done."

[testenv:test]
deps =
    pytest
    pytest-xdist
commands =
    py.test --basetemp={envtmpdir} {posargs}

[testenv:format]
deps =
    black
    isort
    autoflake
    docformatter[tomli]
commands =
    autoflake --in-place --remove-all-unused-imports --expand-star-imports \
        --ignore-init-module-imports --recursive src/ tests/
    docformatter --in-place --recursive src/ tests/
    isort src/ tests/
    black src/ tests/

[testenv:lint]
skip_install = true
deps =
    pylint
commands =
    pylint --disable=E0401 src/

[testenv:flake8]
skip_install = true
deps =
    flake8
commands =
    flake8 --ignore=E501,E272,E241,E222,E221 src/

[testenv:type-check]
skip_install = true
setenv =
    MYPYPATH = {toxinidir}
deps =
    mypy
    types-PyYAML
commands =
    python -m mypy type_stubs/ src/

[testenv:docs]
skip_install = true
deps =
    numpy
    Cython
	sphinx
    sphinx_rtd_theme
    m2r2
changedir = docs
setenv =
    PROJ_VER={env:PROJ_VER}
commands =
    sphinx-build -j auto -b html source/ build/

[testenv:build]
skip_install = true
deps =
    build
commands =
    python -m build

[testenv:install]
commands =
    pybert --version

[testenv:upload]
skip_install = true
depends = build
deps =
    twine
commands =
    twine upload dist/pipbert-{env:PROJ_VER}.tar.gz dist/PipBERT-{env:PROJ_VER}-py3-none-any.whl
